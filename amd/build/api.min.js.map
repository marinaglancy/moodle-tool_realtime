{"version":3,"file":"api.min.js","sources":["../src/api.js"],"sourcesContent":["/**\n * Real time events\n *\n * @module     tool_realtime/api\n * @copyright  2020 Marina Glancy\n */\ndefine(['core/pubsub', 'tool_realtime/events'], function() {\n\n    document.listofchannels = [];\n\n    return {\n        setImplementation: function(plugin) {\n            var totalchannels;\n            document.delegatedplugin = plugin;\n            // In here check list to subscribe once plugin has been set.\n            if (!document.listofchannels) {\n                return;\n            }\n            totalchannels = document.listofchannels.length;\n\n            if (totalchannels > 0) {\n                for (var i = 0; i < totalchannels; i++) {\n                    var channeltosub = document.listofchannels.shift();\n                    document.delegatedplugin.subscribe( channeltosub.context,\n                                                        channeltosub.component,\n                                                        channeltosub.area,\n                                                        channeltosub.itemid,\n                                                        channeltosub.fromid,\n                                                        channeltosub.fromtimestamp);\n                }\n            }\n        },\n        subscribe: function(context, component, area, itemid, fromId= 0, fromtimestamp = -1) {\n            var fromTimeStamp = fromtimestamp;\n\n            if (fromId == 0) {\n                fromTimeStamp = (new Date()).getTime();\n            }\n\n            // Check that plugin implementation has been set.\n            if (document.delegatedplugin) {\n                // Conditional for plugin being set.\n                document.delegatedplugin.subscribe(context, component, area, itemid, fromId, fromTimeStamp);\n            } else {\n                // Channel object to store in list\n                var channel = {\n                    context: context,\n                    component: component,\n                    area: area,\n                    itemid: itemid,\n                    fromid: fromId,\n                    fromtimestamp: fromTimeStamp\n                };\n                // Push channel to list\n                document.listofchannels.push(channel);\n            }\n\n        },\n        getPlugin: function() {\n            return document.delegatedplugin;\n        }\n    };\n});\n"],"names":["define","document","listofchannels","setImplementation","plugin","totalchannels","delegatedplugin","length","i","channeltosub","shift","subscribe","context","component","area","itemid","fromid","fromtimestamp","fromId","fromTimeStamp","Date","getTime","channel","push","getPlugin"],"mappings":"AAMAA,2BAAO,CAAC,cAAe,yBAAyB,kBAE5CC,SAASC,eAAiB,GAEnB,CACHC,kBAAmB,SAASC,YACpBC,iBACJJ,SAASK,gBAAkBF,OAEtBH,SAASC,iBAGdG,cAAgBJ,SAASC,eAAeK,QAEpB,MACX,IAAIC,EAAI,EAAGA,EAAIH,cAAeG,IAAK,KAChCC,aAAeR,SAASC,eAAeQ,QAC3CT,SAASK,gBAAgBK,UAAWF,aAAaG,QACbH,aAAaI,UACbJ,aAAaK,KACbL,aAAaM,OACbN,aAAaO,OACbP,aAAaQ,iBAI7DN,UAAW,SAASC,QAASC,UAAWC,KAAMC,YAAQG,8DAAQ,EAAGD,sEAAiB,MAC1EE,cAAgBF,iBAEN,GAAVC,SACAC,eAAiB,IAAIC,MAAQC,WAI7BpB,SAASK,gBAETL,SAASK,gBAAgBK,UAAUC,QAASC,UAAWC,KAAMC,OAAQG,OAAQC,mBAC1E,KAECG,QAAU,CACVV,QAASA,QACTC,UAAWA,UACXC,KAAMA,KACNC,OAAQA,OACRC,OAAQE,OACRD,cAAeE,eAGnBlB,SAASC,eAAeqB,KAAKD,WAIrCE,UAAW,kBACAvB,SAASK"}