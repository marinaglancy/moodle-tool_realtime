{"version":3,"sources":["../src/realtime.js"],"names":["require","config","enforceDefine","paths","define","PubSub","RealTimeEvents","Pusher","api","params","channels","subToChannel","context","component","area","itemid","pusher","key","cluster","channelString","channel","subscribe","bind","data","channelObj","split","payload","JSON","parse","dataToSend","publish","EVENT","plugin","init","userId","app_id","secret","userid","setImplementation","fromId","fromTimeStamp","channeltosubto","fromid","fromtimestamp","push"],"mappings":"AASAA,OAAO,CAACC,MAAR,CAAe,CACXC,aAAa,GADF,CAEXC,KAAK,CAAE,CACH,aAAc,kCADX,CAFI,CAAf,EAOAC,OAAM,kCAAC,CAAC,aAAD,CAAgB,sBAAhB,CAAwC,YAAxC,CAAsD,mBAAtD,CAAD,CAA6E,SAASC,CAAT,CAAiBC,CAAjB,CAAiCC,CAAjC,CAAyCC,CAAzC,CAA8C,IAEzHC,CAAAA,CAFyH,CAGzHC,CAAQ,CAAG,EAH8G,CAMzHC,CAAY,CAAG,SAASC,CAAT,CAAkBC,CAAlB,CAA6BC,CAA7B,CAAmCC,CAAnC,CAA2C,IACtDC,CAAAA,CAAM,CAAG,GAAIT,CAAAA,CAAJ,CAAWE,CAAM,CAACQ,GAAlB,CAAuB,CAChCC,OAAO,CAAET,CAAM,CAACS,OADgB,CAAvB,CAD6C,CAKtDC,CAAa,CAAGP,CAAO,CAAG,GAAV,CAAgBC,CAAhB,CAA4B,GAA5B,CAAkCC,CAAlC,CAAyC,GAAzC,CAA+CC,CALT,CAOtDK,CAAO,CAAGJ,CAAM,CAACK,SAAP,CAAiBF,CAAjB,CAP4C,CAQ1DC,CAAO,CAACE,IAAR,CAAa,OAAb,CAAsB,SAASC,CAAT,CAAe,IAC7BC,CAAAA,CAAU,CAAGL,CAAa,CAACM,KAAd,CAAoB,GAApB,CADgB,CAE7BC,CAAO,CAAGC,IAAI,CAACC,KAAL,CAAWL,CAAX,CAFmB,CAG7BM,CAAU,CAAG,CAAC,OAAWL,CAAU,CAAC,CAAD,CAAtB,CAA2B,UAAcA,CAAU,CAAC,CAAD,CAAnD,CAAwD,KAASA,CAAU,CAAC,CAAD,CAA3E,CAAgF,QAAYE,CAA5F,CAHgB,CAV5BrB,CAcL,CAAOyB,OAAP,CAbaxB,CAaE,CAAeyB,KAA9B,CAAqCF,CAArC,CACH,CALD,CAMH,CApB4H,CAsBzHG,CAAM,CAAI,CACVC,IAAI,CAAE,cAASC,CAAT,CAAiBC,CAAjB,CAAyBlB,CAAzB,CAA8BmB,CAA9B,CAAsClB,CAAtC,CAA+C,CACjD,KAAIT,CAAM,EAAIA,CAAM,CAAC4B,MAArB,EAEO,CACH5B,CAAM,CAAG,CACL0B,MAAM,CAAEA,CADH,CAELlB,GAAG,CAAEA,CAFA,CAGLmB,MAAM,CAAEA,CAHH,CAILlB,OAAO,CAAEA,CAJJ,CAMZ,CACDV,CAAG,CAAC8B,iBAAJ,CAAsBN,CAAtB,CACH,CAbS,CAcVX,SAAS,CAAE,mBAAST,CAAT,CAAkBC,CAAlB,CAA6BC,CAA7B,CAAmCC,CAAnC,CAA2CwB,CAA3C,CAAmDC,CAAnD,CAAkE,CACzE,GAAIC,CAAAA,CAAc,CAAG,CACjB7B,OAAO,CAAEA,CADQ,CAEjBC,SAAS,CAAEA,CAFM,CAGjBC,IAAI,CAAEA,CAHW,CAIjB4B,MAAM,CAAEH,CAJS,CAKjBI,aAAa,CAAEH,CALE,CAArB,CAOA,GAAGC,CAAH,CAAmB,CACf/B,CAAQ,CAACkC,IAAT,CAAcH,CAAd,CACH,CACD9B,CAAY,CAACC,CAAD,CAAUC,CAAV,CAAqBC,CAArB,CAA2BC,CAA3B,CACf,CA1BS,CAtB+G,CAkD7H,MAAOiB,CAAAA,CACV,CAnDK,CAAN","sourcesContent":["/**\n * Real time events using Pusher\n *\n * @module     realtimeplugin_pusher/realtime\n * @package    realtimeplugin_pusher\n * @copyright  2020 Daniel Conquit, Matthew Gray, Nicholas Parker, Dan Thistlethwaite\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nrequire.config({\n    enforceDefine: false,\n    paths: {\n        \"pusher-7.0\": 'https://js.pusher.com/7.0/pusher'\n    }\n});\n\ndefine(['core/pubsub', 'tool_realtime/events', 'pusher-7.0', 'tool_realtime/api'], function(PubSub, RealTimeEvents, Pusher, api) {\n\n    var params;\n    var channels = [];\n    var pubSub = PubSub;\n    var realTimeEvents = RealTimeEvents;\n    var subToChannel = function(context, component, area, itemid) {\n        var pusher = new Pusher(params.key, {\n            cluster: params.cluster\n        });\n\n        var channelString = context + '-' + component + '-' + area + '-' + itemid;\n\n        var channel = pusher.subscribe(channelString);\n        channel.bind('event', function(data) {\n            var channelObj = channelString.split('-');\n            var payload = JSON.parse(data);\n            var dataToSend = {\"itemid\" : channelObj[3], \"component\" : channelObj[1], \"area\" : channelObj[2], \"payload\" : payload};\n            pubSub.publish(realTimeEvents.EVENT, dataToSend);\n        });\n    };\n\n    var plugin =  {\n        init: function(userId, app_id, key, secret, cluster) {\n            if (params && params.userid) {\n                // Log console dev error.\n            } else {\n                params = {\n                    app_id: app_id,\n                    key: key,\n                    secret: secret,\n                    cluster: cluster\n                };\n            }\n            api.setImplementation(plugin);\n        },\n        subscribe: function(context, component, area, itemid, fromId, fromTimeStamp) {\n            var channeltosubto = {\n                context: context,\n                component: component,\n                area: area,\n                fromid: fromId,\n                fromtimestamp: fromTimeStamp\n            };\n            if(channeltosubto) {\n                channels.push(channeltosubto);\n            }\n            subToChannel(context, component, area, itemid);\n        }\n    };\n    return plugin;\n});\n"],"file":"realtime.min.js"}