{"version":3,"file":"realtime.min.js","sources":["../src/realtime.js"],"sourcesContent":["/**\n * Real time events using Pusher\n *\n * @module     realtimeplugin_pusher/realtime\n * @copyright  2020 Daniel Conquit, Matthew Gray, Nicholas Parker, Dan Thistlethwaite\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nrequire.config({\n    enforceDefine: false,\n    paths: {\n        \"pusher-7.0\": 'https://js.pusher.com/7.0/pusher'\n    }\n});\n\ndefine(['core/pubsub', 'tool_realtime/events', 'pusher-7.0'], function(PubSub, RealTimeEvents, Pusher) {\n\n    var params;\n    var pubSub = PubSub;\n    var realTimeEvents = RealTimeEvents;\n\n    var plugin =  {\n        init: function(userId, app_id, key, secret, cluster) {\n            if (params && params.userid) {\n                // Log console dev error.\n            } else {\n                params = {\n                    app_id: app_id,\n                    key: key,\n                    secret: secret,\n                    cluster: cluster\n                };\n            }\n        },\n        subscribe: function(hash, context, component, area, itemid, channel) {\n            var pusher = new Pusher(params.key, {\n                cluster: params.cluster\n            });\n\n            var pusherChannel = pusher.subscribe(hash);\n            pusherChannel.bind('event', function(data) {\n                let payload;\n                try {\n                    payload = JSON.parse(data);\n                } catch (_) {\n                    payload = [];\n                }\n                var dataToSend = {\n                    context, component: component, area, itemid, channel, payload\n                };\n                pubSub.publish(realTimeEvents.EVENT, dataToSend);\n            });\n        }\n    };\n    return plugin;\n});\n"],"names":["require","config","enforceDefine","paths","define","PubSub","RealTimeEvents","Pusher","params","pubSub","realTimeEvents","init","userId","app_id","key","secret","cluster","userid","subscribe","hash","context","component","area","itemid","channel","bind","data","payload","JSON","parse","_","dataToSend","publish","EVENT"],"mappings":";;;;;;;AAQAA,QAAQC,OAAO,CACXC,eAAe,EACfC,MAAO,cACW,sCAItBC,wCAAO,CAAC,cAAe,uBAAwB,eAAe,SAASC,OAAQC,eAAgBC,YAEvFC,OACAC,OAASJ,OACTK,eAAiBJ,qBAEP,CACVK,KAAM,SAASC,OAAQC,OAAQC,IAAKC,OAAQC,SACpCR,QAAUA,OAAOS,SAGjBT,OAAS,CACLK,OAAQA,OACRC,IAAKA,IACLC,OAAQA,OACRC,QAASA,WAIrBE,UAAW,SAASC,KAAMC,QAASC,UAAWC,KAAMC,OAAQC,SAC3C,IAAIjB,OAAOC,OAAOM,IAAK,CAChCE,QAASR,OAAOQ,UAGOE,UAAUC,MACvBM,KAAK,SAAS,SAASC,UAC7BC,YAEAA,QAAUC,KAAKC,MAAMH,MACvB,MAAOI,GACLH,QAAU,OAEVI,WAAa,CACbX,QAAAA,QAASC,UAAWA,UAAWC,KAAAA,KAAMC,OAAAA,OAAQC,QAAAA,QAASG,QAAAA,SAE1DlB,OAAOuB,QAAQtB,eAAeuB,MAAOF"}