{"version":3,"file":"realtime.min.js","sources":["../src/realtime.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Real time events using Pusher\n *\n * @module     realtimeplugin_pusher/realtime\n * @copyright  2020 Daniel Conquit, Matthew Gray, Nicholas Parker, Dan Thistlethwaite\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nrequire.config({\n    paths: {\n        \"pusher\": 'https://js.pusher.com/7.0/pusher'\n    }\n});\n\nimport * as PubSub from 'core/pubsub';\nimport * as RealTimeEvents from 'tool_realtime/events';\n\nlet params;\n\n/**\n * Initialise plugin\n *\n * @param {String} key\n * @param {String} cluster\n */\nexport function init(key, cluster) {\n    params = {\n        key,\n        cluster\n    };\n}\n\n/**\n * Subscribe to events\n *\n * @param {String} hash\n * @param {Object} properties\n */\nexport function subscribe(hash, properties) {\n    require(['pusher'], function(Pusher) {\n        var pusher = new Pusher(params.key, {\n            cluster: params.cluster\n        });\n\n        var pusherChannel = pusher.subscribe(hash);\n        pusherChannel.bind('event', function(data) {\n            let payload;\n            try {\n                payload = JSON.parse(data);\n            } catch (_) {\n                payload = [];\n            }\n            var dataToSend = {...properties, payload};\n            PubSub.publish(RealTimeEvents.EVENT, dataToSend);\n        });\n    });\n}\n"],"names":["params","key","cluster","hash","properties","require","Pusher","subscribe","bind","data","payload","JSON","parse","_","dataToSend","PubSub","publish","RealTimeEvents","EVENT","config","paths"],"mappings":";;;;;;;SAgCIA,sFAQiBC,IAAKC,SACtBF,OAAS,CACLC,IAAAA,IACAC,QAAAA,sCAUkBC,KAAMC,YAC5BC,QAAQ,CAAC,WAAW,SAASC,QACZ,IAAIA,OAAON,OAAOC,IAAK,CAChCC,QAASF,OAAOE,UAGOK,UAAUJ,MACvBK,KAAK,SAAS,SAASC,UAC7BC,YAEAA,QAAUC,KAAKC,MAAMH,MACvB,MAAOI,GACLH,QAAU,OAEVI,WAAa,IAAIV,WAAYM,QAAAA,SACjCK,OAAOC,QAAQC,eAAeC,MAAOJ,iHA7CjDT,QAAQc,OAAO,CACXC,MAAO,QACO"}